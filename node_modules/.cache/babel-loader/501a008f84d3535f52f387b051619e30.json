{"ast":null,"code":"import _toConsumableArray from\"C:/Users/avocado-dev/Desktop/Programming/gospelchurch-FE-React/gospelchurch-FE-React-main/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _regeneratorRuntime from\"C:/Users/avocado-dev/Desktop/Programming/gospelchurch-FE-React/gospelchurch-FE-React-main/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"C:/Users/avocado-dev/Desktop/Programming/gospelchurch-FE-React/gospelchurch-FE-React-main/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"C:/Users/avocado-dev/Desktop/Programming/gospelchurch-FE-React/gospelchurch-FE-React-main/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useCallback,useEffect,useState}from\"react\";import axios from\"axios\";import moment from'moment';import{Button,Dialog,DialogContent,IconButton,TextField}from\"@mui/material\";import{useSelector}from\"react-redux\";import{jwtUtils}from\"../utils/jwtUtils\";import api from\"../utils/api\";import{useLocation,useNavigate}from\"react-router-dom\";import DisabledByDefaultOutlinedIcon from\"@mui/icons-material/DisabledByDefaultOutlined\";import KeyboardArrowDownIcon from'@mui/icons-material/KeyboardArrowDown';import\"./comments.scss\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Comments=function Comments(_ref){var board_id=_ref.board_id;// 로그인 후 현재 경로로 돌아오기 위해 useLocation 사용\nvar location=useLocation();var navigate=useNavigate();var _useState=useState([]),_useState2=_slicedToArray(_useState,2),commentList=_useState2[0],setCommentList=_useState2[1];// 입력한 댓글 내용\nvar _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),content=_useState4[0],setContent=_useState4[1];var token=useSelector(function(state){return state.Auth.token;});// 현재 페이지, 전체 페이지 갯수\nvar _useState5=useState(1),_useState6=_slicedToArray(_useState5,2),page=_useState6[0],setPage=_useState6[1];var _useState7=useState(0),_useState8=_slicedToArray(_useState7,2),pageCount=_useState8[0],setPageCount=_useState8[1];// modal이 보이는 여부 상태\nvar _useState9=useState(false),_useState10=_slicedToArray(_useState9,2),show=_useState10[0],setShow=_useState10[1];// 페이지에 해당하는 댓글 목록은 page 상태가 변경될 때마다 가져옴\n// 맨 처음 페이지가 1이므로 처음엔 1페이지에 해당하는 댓글을 가져온다\nuseEffect(function(){var getCommentList=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var _yield$axios$get,data;return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return axios.get(\"/api/comment/list?board_id=\".concat(board_id,\"&page_number=\").concat(page,\"&page_size=\",5));case 2:_yield$axios$get=_context.sent;data=_yield$axios$get.data;return _context.abrupt(\"return\",data);case 5:case\"end\":return _context.stop();}}},_callee);}));return function getCommentList(){return _ref2.apply(this,arguments);};}();// 기존 commentList에 데이터를 덧붙임\ngetCommentList().then(function(result){return setCommentList([].concat(_toConsumableArray(commentList),_toConsumableArray(result)));});},[page]);// 페이지 카운트는 컴포넌트가 마운트되고 딱 한번만 가져오면됨\nuseEffect(function(){// 댓글 전체 갯수 구하기\nvar getTotalBoard=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(){var _yield$axios$get2,data;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return axios.get(\"/api/comment/count?board_id=\".concat(board_id));case 2:_yield$axios$get2=_context2.sent;data=_yield$axios$get2.data;return _context2.abrupt(\"return\",data.total);case 5:case\"end\":return _context2.stop();}}},_callee2);}));return function getTotalBoard(){return _ref3.apply(this,arguments);};}();// 페이지 카운트 구하기: (전체 comment 갯수) / (한 페이지 갯수) 결과 올림\ngetTotalBoard().then(function(result){return setPageCount(Math.ceil(result/5));});},[]);// 댓글 추가하기, 댓글 추가하는 API는 인증 미들웨어가 설정되어 있으므로\n// HTTP HEADER에 jwt-token 정보를 보내는 interceptor 사용\nvar submit=useCallback(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(){var comment;return _regeneratorRuntime().wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:comment={board_id:board_id,// DB에 엔터가 먹힌 상태로 들어가므로 제대로 화면에 띄우기 위해 <br>로 치환\ncontent:content,user_id:jwtUtils.getId(token)};// axios interceptor 사용 : 로그인한 사용자만 쓸 수 있다!\n_context3.next=3;return api.post('/api/comment',comment);case 3:alert(\"댓글 등록 완료\");window.location.reload();case 5:case\"end\":return _context3.stop();}}},_callee3);})),[content]);console.log(commentList);/*modal 관련 코드*/ // 로그인 후 돌아올 수 있게 현재 경로 세팅\nvar goLogin=function goLogin(){setShow(false);navigate(\"/login?redirectUrl=\".concat(location.pathname));};// 로그인을 하지 않은 상태에서 댓글 입력 창을 클릭하면 Modal이 열림.\nvar isLogin=function isLogin(){if(!jwtUtils.isAuth(token)){setShow(true);}};return/*#__PURE__*/_jsxs(\"div\",{className:\"comments-wrapper\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"comments-header\",children:[/*#__PURE__*/_jsx(TextField,{className:\"comments-header-textarea\",maxRows:3,onClick:isLogin,onChange:function onChange(e){setContent(e.target.value);},multiline:true,placeholder:\"\\uB313\\uAE00\\uC744 \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694\"}),content!==\"\"?/*#__PURE__*/_jsx(Button,{variant:\"outlined\",onClick:submit,children:\"\\uB4F1\\uB85D\\uD558\\uAE30\"}):/*#__PURE__*/_jsx(Button,{variant:\"outlined\",disabled:true,children:\"\\uB4F1\\uB85D\\uD558\\uAE30\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"comments-body\",children:commentList.map(function(item,index){return/*#__PURE__*/_jsxs(\"div\",{className:\"comments-comment\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"comment-username-date\",children:/*#__PURE__*/_jsx(\"div\",{className:\"comment-date\",children:moment(item.created).add(9,\"hour\").format('YYYY-MM-DD HH:mm:ss')})}),/*#__PURE__*/_jsx(\"div\",{className:\"comment-content\",children:item.content}),/*#__PURE__*/_jsx(\"div\",{className:\"comment-username\",children:item.user.username}),/*#__PURE__*/_jsx(\"hr\",{})]},index);})}),/*\n          page(현재 페이지)와 pageCount(총 페이지 갯수)가 같으면 서버에서\n          모든 댓글을 가져온 상태이므로 댓글 더보기 버튼이 보이지 않게 한다.\n          page의 초기 상태가 1이기 때문에 컴포넌트가 마운트 된 후 첫페이지를 가져오고 만약 pageCount가 5이고\n          현재 page가 4라면 버튼을 누르는 순간 page가 5가되어 마지막 페이지의 데이터를 가져온다.\n        */page<pageCount&&/*#__PURE__*/_jsxs(\"div\",{className:\"comments-footer\",onClick:function onClick(){setPage(page+1);},children:[\"\\uB313\\uAE00 \\uB354\\uBCF4\\uAE30\",/*#__PURE__*/_jsx(KeyboardArrowDownIcon,{})]}),/*#__PURE__*/_jsx(Dialog,{open:show,children:/*#__PURE__*/_jsxs(DialogContent,{style:{position:\"relative\"},children:[/*#__PURE__*/_jsx(IconButton,{style:{position:\"absolute\",top:\"0\",right:\"0\"},onClick:function onClick(){setShow(false);},children:/*#__PURE__*/_jsx(DisabledByDefaultOutlinedIcon,{})}),/*#__PURE__*/_jsxs(\"div\",{className:\"modal\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"modal-title\",children:\"\\uB85C\\uADF8\\uC778\\uC774 \\uD544\\uC694\\uD569\\uB2C8\\uB2E4\"}),/*#__PURE__*/_jsx(\"div\",{className:\"modal-content\",children:\"\\uB85C\\uADF8\\uC778 \\uD398\\uC774\\uC9C0\\uB85C \\uC774\\uB3D9\\uD558\\uC2DC\\uACA0\\uC2B5\\uB2C8\\uAE4C?\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"modal-button\",children:[/*#__PURE__*/_jsx(Button,{variant:\"outlined\",color:\"error\",onClick:goLogin,children:\"\\uC608\"}),/*#__PURE__*/_jsx(Button,{variant:\"outlined\",color:\"primary\",onClick:function onClick(){setShow(false);},children:\"\\uC544\\uB2C8\\uC624\"})]})]})]})})]});};export default Comments;","map":{"version":3,"names":["React","useCallback","useEffect","useState","axios","moment","Button","Dialog","DialogContent","IconButton","TextField","useSelector","jwtUtils","api","useLocation","useNavigate","DisabledByDefaultOutlinedIcon","KeyboardArrowDownIcon","Comments","board_id","location","navigate","commentList","setCommentList","content","setContent","token","state","Auth","page","setPage","pageCount","setPageCount","show","setShow","getCommentList","get","data","then","result","getTotalBoard","total","Math","ceil","submit","comment","user_id","getId","post","alert","window","reload","console","log","goLogin","pathname","isLogin","isAuth","e","target","value","map","item","index","created","add","format","user","username","position","top","right"],"sources":["C:/Users/avocado-dev/Desktop/Programming/gospelchurch-FE-React/gospelchurch-FE-React-main/src/components/Comments.js"],"sourcesContent":["import React, {useCallback, useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport moment from 'moment';\nimport {Button, Dialog, DialogContent, IconButton, TextField} from \"@mui/material\";\nimport {useSelector} from \"react-redux\";\nimport {jwtUtils} from \"../utils/jwtUtils\";\nimport api from \"../utils/api\";\nimport {useLocation, useNavigate} from \"react-router-dom\";\nimport DisabledByDefaultOutlinedIcon from \"@mui/icons-material/DisabledByDefaultOutlined\";\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\nimport \"./comments.scss\";\n\nconst Comments = ({board_id}) => {\n  // 로그인 후 현재 경로로 돌아오기 위해 useLocation 사용\n  const location = useLocation();\n  const navigate = useNavigate();\n  const [commentList, setCommentList] = useState([]);\n  // 입력한 댓글 내용\n  const [content, setContent] = useState(\"\");\n  const token = useSelector(state => state.Auth.token);\n  // 현재 페이지, 전체 페이지 갯수\n  const [page, setPage] = useState(1);\n  const [pageCount, setPageCount] = useState(0);\n  // modal이 보이는 여부 상태\n  const [show, setShow] = useState(false);\n\n  // 페이지에 해당하는 댓글 목록은 page 상태가 변경될 때마다 가져옴\n  // 맨 처음 페이지가 1이므로 처음엔 1페이지에 해당하는 댓글을 가져온다\n  useEffect(() => {\n    const getCommentList = async () => {\n      const {data} = await axios.get(`/api/comment/list?board_id=${board_id}&page_number=${page}&page_size=${5}`);\n      return data;\n    }\n    // 기존 commentList에 데이터를 덧붙임\n    getCommentList().then((result) => setCommentList([...commentList, ...result]));\n  }, [page])\n\n  // 페이지 카운트는 컴포넌트가 마운트되고 딱 한번만 가져오면됨\n  useEffect(() => {\n    // 댓글 전체 갯수 구하기\n    const getTotalBoard = async () => {\n      const {data} = await axios.get(`/api/comment/count?board_id=${board_id}`);\n      return data.total;\n    }\n    // 페이지 카운트 구하기: (전체 comment 갯수) / (한 페이지 갯수) 결과 올림\n    getTotalBoard().then((result) => setPageCount(Math.ceil(result / 5)));\n  }, []);\n\n  // 댓글 추가하기, 댓글 추가하는 API는 인증 미들웨어가 설정되어 있으므로\n  // HTTP HEADER에 jwt-token 정보를 보내는 interceptor 사용\n  const submit = useCallback(async () => {\n    const comment = {\n      board_id: board_id,\n      // DB에 엔터가 먹힌 상태로 들어가므로 제대로 화면에 띄우기 위해 <br>로 치환\n      content: content,\n      user_id: jwtUtils.getId(token)\n    }\n    // axios interceptor 사용 : 로그인한 사용자만 쓸 수 있다!\n    await api.post('/api/comment', comment);\n    alert(\"댓글 등록 완료\");\n    window.location.reload();\n  }, [content]);\n  console.log(commentList)\n  /*modal 관련 코드*/\n  // 로그인 후 돌아올 수 있게 현재 경로 세팅\n  const goLogin = () => {\n    setShow(false);\n    navigate(`/login?redirectUrl=${location.pathname}`);\n  }\n  // 로그인을 하지 않은 상태에서 댓글 입력 창을 클릭하면 Modal이 열림.\n  const isLogin = () => {\n    if (!jwtUtils.isAuth(token)) {\n      setShow(true);\n    }\n  }\n\n  return (\n    <div className=\"comments-wrapper\">\n      <div className=\"comments-header\">\n        <TextField\n          className=\"comments-header-textarea\"\n          maxRows={3}\n          onClick={isLogin}\n          onChange={(e) => {\n            setContent(e.target.value)\n          }}\n          multiline placeholder=\"댓글을 입력해주세요\"\n        />\n        {content !== \"\" ? (\n          <Button variant=\"outlined\" onClick={submit}>등록하기</Button>\n        ) : (\n          <Button variant=\"outlined\" disabled={true}>\n            등록하기\n          </Button>\n        )}\n      </div>\n      <div className=\"comments-body\">\n        {commentList.map((item, index) => (\n          <div key={index} className=\"comments-comment\">\n            <div className=\"comment-username-date\">\n              <div className=\"comment-date\">{moment(item.created).add(9, \"hour\").format('YYYY-MM-DD HH:mm:ss')}</div>\n            </div>\n            <div className=\"comment-content\">{item.content}</div>\n            <div className=\"comment-username\">{item.user.username}</div>\n            <hr/>\n          </div>\n        ))}\n      </div>\n      {\n        /*\n          page(현재 페이지)와 pageCount(총 페이지 갯수)가 같으면 서버에서\n          모든 댓글을 가져온 상태이므로 댓글 더보기 버튼이 보이지 않게 한다.\n          page의 초기 상태가 1이기 때문에 컴포넌트가 마운트 된 후 첫페이지를 가져오고 만약 pageCount가 5이고\n          현재 page가 4라면 버튼을 누르는 순간 page가 5가되어 마지막 페이지의 데이터를 가져온다.\n        */\n        page < pageCount && (\n          <div className=\"comments-footer\"\n               onClick={() => {\n                 setPage(page + 1);\n               }}\n          >\n            댓글 더보기\n            <KeyboardArrowDownIcon/>\n          </div>\n        )\n      }\n\n      {/*modal*/}\n      <Dialog open={show}>\n        <DialogContent style={{position: \"relative\"}}>\n          <IconButton\n            style={{position: \"absolute\", top: \"0\", right: \"0\"}}\n            onClick={() => {\n              setShow(false)\n            }}\n          >\n            <DisabledByDefaultOutlinedIcon/>\n          </IconButton>\n          <div className=\"modal\">\n            <div className=\"modal-title\">로그인이 필요합니다</div>\n            <div className=\"modal-content\">로그인 페이지로 이동하시겠습니까?</div>\n            <div className=\"modal-button\">\n              <Button\n                variant=\"outlined\" color=\"error\"\n                onClick={goLogin}\n              >\n                예\n              </Button>\n              <Button\n                variant=\"outlined\" color=\"primary\"\n                onClick={() => {\n                  setShow(false)\n                }}\n              >\n                아니오\n              </Button>\n            </div>\n          </div>\n        </DialogContent>\n      </Dialog>\n    </div>\n  );\n}\nexport default Comments;"],"mappings":"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"},"metadata":{},"sourceType":"module"}