{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\avocado-dev\\\\Desktop\\\\dbord-FE-React-main\\\\dbord-FE-React-main\\\\src\\\\components\\\\firebase\\\\FirebaseSignUp.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { createUserWithEmailAndPassword } from \"firebase/auth\";\nimport { auth } from \"./FirebaseConfig\";\nimport { Formik, useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { TextField } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FirebaseSignUp = () => {\n  _s();\n\n  const [registerEmail, setRegisterEmail] = useState(\"\");\n  const [registerPassword, setRegisterPassword] = useState(\"\");\n  const validationSchema = Yup.object().shape({\n    email: Yup.string().email(\"올바른 이메일 형식이 아닙니다\").required(\"이메일을 입력하세요.\"),\n    username: Yup.string().min(2, \"닉네임은 최소 2글자 이상입니다.\").max(10, \"닉네임은 최대 10글자입니다.\").matches(/^[가-힣a-zA-Z][^!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?\\s]*$/, \"닉네임에 특수문자가 포함되면 안되고 숫자로 시작하면 안됩니다.\").required(\"닉네임을 입력하세요.\"),\n    password: Yup.string().min(8, \"비밀번호는 최소 8자리 이상입니다.\").max(16, \"비밀번호는 최대 16자리입니다.\").required(\"패스워드를 입력하세요.\").matches(/^(?=.*[a-zA-Z])(?=.*[0-9])(?=.*[!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?])[^\\s]*$/, \"알파벳, 숫자, 공백을 제외한 특수문자를 모두 포함해야 합니다.\"),\n    password2: Yup.string().oneOf([Yup.ref(\"password\"), null], \"비밀번호가 일치하지 않습니다.\").required(\"필수 입력 값입니다.\")\n  });\n\n  const register = async () => {\n    try {\n      const user = await createUserWithEmailAndPassword(auth, registerEmail, registerPassword);\n      console.log(user);\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: {\n      email: \"\",\n      username: \"\",\n      password: \"\",\n      password2: \"\"\n    },\n    validationSchema: validationSchema,\n    validateOnMount: true,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-forms\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-forms-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-label\",\n            children: \"\\uC774\\uBA54\\uC77C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            value: values.email,\n            name: \"email\",\n            variant: \"outlined\",\n            onChange: e => {\n              setRegisterEmail(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-label\",\n          children: \"\\uBE44\\uBC00\\uBC88\\uD638\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          value: values.password,\n          name: \"password\",\n          variant: \"outlined\",\n          type: \"password\",\n          onChange: e => {\n            setRegisterPassword(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: register,\n          children: \"CreateUser\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n};\n\n_s(FirebaseSignUp, \"Ox8L2/zsyRox0jgQLeBVwWv7M1Q=\");\n\n_c = FirebaseSignUp;\nexport default FirebaseSignUp;\n\nvar _c;\n\n$RefreshReg$(_c, \"FirebaseSignUp\");","map":{"version":3,"names":["React","useState","createUserWithEmailAndPassword","auth","Formik","useFormik","Yup","TextField","FirebaseSignUp","registerEmail","setRegisterEmail","registerPassword","setRegisterPassword","validationSchema","object","shape","email","string","required","username","min","max","matches","password","password2","oneOf","ref","register","user","console","log","error","message","values","e","target","value"],"sources":["C:/Users/avocado-dev/Desktop/dbord-FE-React-main/dbord-FE-React-main/src/components/firebase/FirebaseSignUp.js"],"sourcesContent":["import React, {useState} from \"react\";\nimport {createUserWithEmailAndPassword} from \"firebase/auth\";\nimport {auth} from \"./FirebaseConfig\";\nimport {Formik, useFormik} from \"formik\";\nimport * as Yup from \"yup\";\nimport {TextField} from \"@mui/material\";\n\nconst FirebaseSignUp = () => {\n    const [registerEmail, setRegisterEmail] = useState(\"\");\n    const [registerPassword, setRegisterPassword] = useState(\"\");\n\n    const validationSchema = Yup.object().shape({\n        email: Yup.string()\n            .email(\"올바른 이메일 형식이 아닙니다\")\n            .required(\"이메일을 입력하세요.\"),\n        username: Yup.string()\n            .min(2, \"닉네임은 최소 2글자 이상입니다.\")\n            .max(10, \"닉네임은 최대 10글자입니다.\")\n            .matches(\n                /^[가-힣a-zA-Z][^!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?\\s]*$/,\n                \"닉네임에 특수문자가 포함되면 안되고 숫자로 시작하면 안됩니다.\"\n            )\n            .required(\"닉네임을 입력하세요.\"),\n        password: Yup.string()\n            .min(8, \"비밀번호는 최소 8자리 이상입니다.\")\n            .max(16, \"비밀번호는 최대 16자리입니다.\")\n            .required(\"패스워드를 입력하세요.\")\n            .matches(\n                /^(?=.*[a-zA-Z])(?=.*[0-9])(?=.*[!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?])[^\\s]*$/,\n                \"알파벳, 숫자, 공백을 제외한 특수문자를 모두 포함해야 합니다.\"\n            ),\n        password2: Yup.string()\n            .oneOf([Yup.ref(\"password\"), null], \"비밀번호가 일치하지 않습니다.\")\n            .required(\"필수 입력 값입니다.\"),\n    });\n\n    const register = async () => {\n        try {\n            const user = await createUserWithEmailAndPassword(\n                auth,\n                registerEmail,\n                registerPassword\n            );\n            console.log(user);\n        } catch (error) {\n            console.log(error.message);\n        }\n    };\n\n    return (\n        <Formik\n            initialValues={{\n                email: \"\",\n                username: \"\",\n                password: \"\",\n                password2: \"\",\n            }}\n            validationSchema={validationSchema}\n            validateOnMount={true}\n        >\n\n            <div>\n                <div className=\"input-forms\">\n                    <div className=\"input-forms-item\">\n                        <div className=\"input-label\">이메일</div>\n                        <TextField\n                            value={values.email}\n                            name=\"email\"\n                            variant=\"outlined\"\n                            onChange={(e) => {\n                                setRegisterEmail(e.target.value);\n                            }}\n                        />\n                    </div>\n\n                    {/*<input*/}\n                    {/*    placeholder=\"Email\"*/}\n                    {/*    onChange={(e) => {*/}\n                    {/*        setRegisterEmail(e.target.value);*/}\n                    {/*    }}*/}\n                    {/*/>*/}\n                    <div className=\"input-label\">비밀번호</div>\n                    <TextField\n                        value={values.password}\n                        name=\"password\"\n                        variant=\"outlined\"\n                        type=\"password\"\n                        onChange={(e) => {\n                            setRegisterPassword(e.target.value);\n                        }}\n                    />\n                    {/*<input*/}\n                    {/*    placeholder=\"EmailPassword\"*/}\n                    {/*    onChange={(e) => {*/}\n                    {/*        setRegisterPassword(e.target.value);*/}\n                    {/*    }}*/}\n                    {/*/>*/}\n                    <button onClick={register}>CreateUser</button>\n                </div>\n            </div>\n        </Formik>\n    );\n};\nexport default FirebaseSignUp;"],"mappings":"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"},"metadata":{},"sourceType":"module"}