{"ast":null,"code":"import _regeneratorRuntime from\"/Users/suni94/dev/dbord-FE-React-main/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/Users/suni94/dev/dbord-FE-React-main/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/Users/suni94/dev/dbord-FE-React-main/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useEffect,useState}from\"react\";import axios from\"axios\";import{useNavigate,useParams}from\"react-router-dom\";import\"./board.scss\";import{jwtUtils}from\"../../utils/jwtUtils\";import{Button,Dialog,DialogContent,IconButton}from\"@mui/material\";import{useSelector}from\"react-redux\";import BuildOutlinedIcon from'@mui/icons-material/BuildOutlined';import DeleteForeverOutlinedIcon from'@mui/icons-material/DeleteForeverOutlined';import DisabledByDefaultOutlinedIcon from\"@mui/icons-material/DisabledByDefaultOutlined\";import api from\"../../utils/api\";import moment from\"moment\";import Comments from\"../../components/Comments\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Board=function Board(){// URL 파라미터 받기 - board의 id\nvar _useParams=useParams(),board_id=_useParams.board_id;var _useState=useState({}),_useState2=_slicedToArray(_useState,2),board=_useState2[0],setBoard=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),isLoaded=_useState4[0],setIsLoaded=_useState4[1];var token=useSelector(function(state){return state.Auth.token;});var navigate=useNavigate();// modal이 보이는 여부 상태\nvar _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),show=_useState6[0],setShow=_useState6[1];// board 가져오기\nuseEffect(function(){var getBoard=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var _yield$axios$get,data;return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return axios.get(\"/api/board/\".concat(board_id));case 2:_yield$axios$get=_context.sent;data=_yield$axios$get.data;return _context.abrupt(\"return\",data);case 5:case\"end\":return _context.stop();}}},_callee);}));return function getBoard(){return _ref.apply(this,arguments);};}();getBoard().then(function(result){return setBoard(result);}).then(function(){return setIsLoaded(true);});},[]);return/*#__PURE__*/_jsxs(React.Fragment,{children:[isLoaded&&/*#__PURE__*/_jsxs(\"div\",{className:\"board-wrapper\",children:[/*\n              해당 글의 작성자가 로그인을 했을 때만 수정, 삭제 버튼 활성화\n              로그인을 한 사용자의 jwt-token에서 user의 ID를 추출, \n              ID는 DB에 저장되어 있는 유저의 고유 번호\n             */jwtUtils.isAuth(token)&&jwtUtils.getId(token)===board.user.id&&/*#__PURE__*/_jsxs(\"div\",{className:\"edit-delete-button\",children:[/*#__PURE__*/_jsx(Button,{variant:\"outlined\",color:\"error\",endIcon:/*#__PURE__*/_jsx(DeleteForeverOutlinedIcon,{}),className:\"delete-button\",onClick:function onClick(){setShow(true);},children:\"\\uC0AD\\uC81C\"}),/*#__PURE__*/_jsx(Button,{variant:\"outlined\",endIcon:/*#__PURE__*/_jsx(BuildOutlinedIcon,{}),onClick:function onClick(){navigate(\"/edit-board/\".concat(board_id));},children:\"\\uC218\\uC815\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"board-header\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"board-header-username\",children:board.user.username}),/*#__PURE__*/_jsx(\"div\",{className:\"board-header-date\",children:moment(board.created).add(9,\"hour\").format('YYYY-MM-DD')})]}),/*#__PURE__*/_jsx(\"hr\",{}),/*#__PURE__*/_jsx(\"div\",{className:\"board-body\",children:/*#__PURE__*/_jsx(\"div\",{className:\"board-image\",children:/*#__PURE__*/_jsx(\"img\",{src:\"/api/image/view/\".concat(board_id)})})}),/*#__PURE__*/_jsxs(\"div\",{className:\"board-title-content\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"board-title\",children:board.title}),/*#__PURE__*/_jsx(\"div\",{className:\"board-content\",children:board.content})]}),/*#__PURE__*/_jsx(\"hr\",{}),/*#__PURE__*/_jsx(\"div\",{className:\"board-footer\",children:/*#__PURE__*/_jsx(Comments,{board_id:board_id})})]}),/*#__PURE__*/_jsx(Dialog,{open:show,children:/*#__PURE__*/_jsxs(DialogContent,{style:{position:\"relative\"},children:[/*#__PURE__*/_jsx(IconButton,{style:{position:\"absolute\",top:\"0\",right:\"0\"},onClick:function onClick(){return setShow(false);},children:/*#__PURE__*/_jsx(DisabledByDefaultOutlinedIcon,{})}),/*#__PURE__*/_jsxs(\"div\",{className:\"modal\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"modal-title\",children:\" \\uC815\\uB9D0 \\uC0AD\\uC81C\\uD558\\uC2DC\\uACA0\\uC2B5\\uB2C8\\uAE4C ?\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"modal-button\",children:[/*#__PURE__*/_jsx(Button,{variant:\"outlined\",color:\"error\",onClick:/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(){return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:setShow(false);// 모달의 예 버튼 클릭시 게시물 삭제\n_context2.next=3;return api.delete(\"/api/board/\".concat(board_id));case 3:alert(\"게시물이 삭제되었습니다😎\");window.location.href=\"/myboard-list\";case 5:case\"end\":return _context2.stop();}}},_callee2);})),children:\"\\uC608\"}),/*#__PURE__*/_jsx(Button,{variant:\"outlined\",color:\"primary\",onClick:function onClick(){setShow(false);},children:\"\\uC544\\uB2C8\\uC624\"})]})]})]})})]});};export default Board;","map":{"version":3,"names":["React","useEffect","useState","axios","useNavigate","useParams","jwtUtils","Button","Dialog","DialogContent","IconButton","useSelector","BuildOutlinedIcon","DeleteForeverOutlinedIcon","DisabledByDefaultOutlinedIcon","api","moment","Comments","Board","board_id","board","setBoard","isLoaded","setIsLoaded","token","state","Auth","navigate","show","setShow","getBoard","get","data","then","result","isAuth","getId","user","id","username","created","add","format","title","content","position","top","right","delete","alert","window","location","href"],"sources":["/Users/suni94/dev/dbord-FE-React-main/src/pages/board/Board.js"],"sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport {useNavigate, useParams} from \"react-router-dom\";\nimport \"./board.scss\";\nimport {jwtUtils} from \"../../utils/jwtUtils\";\nimport {Button, Dialog, DialogContent, IconButton} from \"@mui/material\";\nimport {useSelector} from \"react-redux\";\nimport BuildOutlinedIcon from '@mui/icons-material/BuildOutlined';\nimport DeleteForeverOutlinedIcon from '@mui/icons-material/DeleteForeverOutlined';\nimport DisabledByDefaultOutlinedIcon from \"@mui/icons-material/DisabledByDefaultOutlined\";\nimport api from \"../../utils/api\";\nimport moment from \"moment\";\nimport Comments from \"../../components/Comments\";\n\nconst Board = () => {\n  // URL 파라미터 받기 - board의 id\n  const {board_id} = useParams();\n  const [board, setBoard] = useState({});\n  const [isLoaded, setIsLoaded] = useState(false);\n  const token = useSelector(state => state.Auth.token);\n  const navigate = useNavigate();\n  // modal이 보이는 여부 상태\n  const [show, setShow] = useState(false);\n  // board 가져오기\n  useEffect(() => {\n    const getBoard = async () => {\n      const {data} = await axios.get(`/api/board/${board_id}`);\n      return data;\n    }\n    getBoard().then(result => setBoard(result)).then(() => setIsLoaded(true));\n  }, [])\n  return (\n    <React.Fragment>\n      {isLoaded && (\n        <div className=\"board-wrapper\">\n          {\n            /*\n              해당 글의 작성자가 로그인을 했을 때만 수정, 삭제 버튼 활성화\n              로그인을 한 사용자의 jwt-token에서 user의 ID를 추출, \n              ID는 DB에 저장되어 있는 유저의 고유 번호\n             */\n            jwtUtils.isAuth(token) && jwtUtils.getId(token) === board.user.id &&\n            <div className=\"edit-delete-button\">\n              <Button\n                variant=\"outlined\" color=\"error\" endIcon={<DeleteForeverOutlinedIcon/>}\n                className=\"delete-button\"\n                onClick={() => {\n                  setShow(true)\n                }}\n              >\n                삭제\n              </Button>\n              <Button\n                variant=\"outlined\" endIcon={<BuildOutlinedIcon/>}\n                onClick={() => {\n                  navigate(`/edit-board/${board_id}`)\n                }}\n              >\n                수정\n              </Button>\n            </div>\n          }\n          <div className=\"board-header\">\n            <div className=\"board-header-username\">{board.user.username}</div>\n            <div className=\"board-header-date\">{moment(board.created).add(9, \"hour\").format('YYYY-MM-DD')}</div>\n          </div>\n          <hr/>\n          <div className=\"board-body\">\n            <div className=\"board-image\">\n              <img src={`/api/image/view/${board_id}`}/>\n            </div>\n          </div>\n          <div className=\"board-title-content\">\n              <div className=\"board-title\">{board.title}</div>\n              <div className=\"board-content\">{board.content}</div>\n            </div>\n          <hr/>\n          <div className=\"board-footer\">\n            <Comments board_id={board_id}/>\n          </div>\n        </div>\n      )}\n      {/*modal*/}\n      <Dialog open={show}>\n        <DialogContent style={{position: \"relative\"}}>\n          <IconButton\n            style={{position: \"absolute\", top: \"0\", right: \"0\"}}\n            onClick={() => setShow(false)}\n          >\n            <DisabledByDefaultOutlinedIcon/>\n          </IconButton>\n          <div className=\"modal\">\n            <div className=\"modal-title\"> 정말 삭제하시겠습니까 ?</div>\n            <div className=\"modal-button\">\n              <Button\n                variant=\"outlined\"\n                color=\"error\"\n                onClick={async () => {\n                  setShow(false);\n                  // 모달의 예 버튼 클릭시 게시물 삭제\n                  await api.delete(`/api/board/${board_id}`);\n                  alert(\"게시물이 삭제되었습니다😎\");\n                  window.location.href = \"/myboard-list\";\n                }}\n              >\n                예\n              </Button>\n              <Button\n                variant=\"outlined\"\n                color=\"primary\"\n                onClick={() => {\n                  setShow(false)\n                }}\n              >\n                아니오\n              </Button>\n            </div>\n          </div>\n        </DialogContent>\n      </Dialog>\n    </React.Fragment>\n  );\n}\nexport default Board;"],"mappings":"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"},"metadata":{},"sourceType":"module"}